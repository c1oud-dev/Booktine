plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'booktine'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'  // 추가: Thymeleaf 템플릿 엔진
	implementation 'org.springframework.security:spring-security-crypto'          // 추가: BCrypt 암호화
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.2' // 추가: XML 모듈

	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java:8.0.33'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

def frontendDir            = "$projectDir/frontend"
def generatedResourcesDir  = "$buildDir/generated/resources"   // ★ 새 위치

// 1) React 빌드
task frontendBuild(type: Exec) {
	workingDir frontendDir
	commandLine (System.getProperty("os.name").toLowerCase().contains("windows")
			? ['cmd', '/c', 'npm', 'run', 'build']
			: ['npm', 'run', 'build'])
}

// 2) 빌드 산출물을 build/generated/... 으로 복사
task copyFrontend(type: Copy) {
	dependsOn frontendBuild
	from "${frontendDir}/build"
	into "${generatedResourcesDir}/static"
}

// 3) Java 리소스 경로에 포함
sourceSets {
	main {
		resources {
			srcDir generatedResourcesDir     // ★ 추가
		}
	}
}

// 4) processResources 가 copyFrontend 이후 실행되도록
tasks.named('processResources') {
	dependsOn copyFrontend                 // ★ 핵심
}

bootJar {
	dependsOn copyFrontend                 // JAR 만들기 전에도 보장
}
